{{ if .Values.subaccountSync.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subaccount-sync
  namespace: kcp-system
  labels:
    app.kubernetes.io/name: subaccount-sync
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: subaccount-sync
  template:
    metadata:
      labels:
        app.kubernetes.io/name: subaccount-sync
    spec:
      serviceAccountName: {{ .Values.global.kyma_environment_broker.serviceAccountName }}
      {{- with .Values.deployment.securityContext }}
      securityContext:
        {{ toYaml . | nindent 12 }}
      {{- end }}
      containers:
        - name: subaccount-sync
          image: "{{ .Values.global.images.container_registry.path }}/{{ .Values.global.images.kyma_environment_broker.dir }}kyma-environment-subaccount-sync:{{ .Values.global.images.kyma_environment_subaccount_sync.version }}"
          imagePullPolicy: Always
          ports:
          - containerPort: {{ .Values.subaccountSync.metricsPort }}
            name: http
            protocol: TCP
          env:
            - name: SUBACCOUNT_SYNC_KYMA_VERSION
              value: {{ .Values.kymaVersion | required "please specify Values.kymaVersion" | quote}}
            - name: SUBACCOUNT_SYNC_METRICS_PORT
              value: {{ .Values.subaccountSync.metricsPort | quote }}
            - name: SUBACCOUNT_SYNC_LOG_LEVEL
              value: {{ .Values.subaccountSync.logLevel | quote }}
            - name: SUBACCOUNT_SYNC_UPDATE_RESOURCES
              value: {{ .Values.subaccountSync.updateResources | quote }}
            - name: SUBACCOUNT_SYNC_ACCOUNTS_SYNC_INTERVAL
              value: {{ .Values.subaccountSync.accountSyncInterval | quote }}
            - name: SUBACCOUNT_SYNC_STORAGE_SYNC_INTERVAL
              value: {{ .Values.subaccountSync.storageSyncInterval | quote }}
            - name: SUBACCOUNT_SYNC_EVENTS_WINDOW_SIZE
              value: {{ .Values.subaccountSync.eventsWindowSize | quote }}
            - name: SUBACCOUNT_SYNC_EVENTS_WINDOW_INTERVAL
              value: {{ .Values.subaccountSync.eventsWindowInterval | quote }}
            - name: SUBACCOUNT_SYNC_QUEUE_SLEEP_INTERVAL
              value: {{ .Values.subaccountSync.queueSleepInterval | quote }}
            - name: SUBACCOUNT_SYNC_CIS_EVENTS_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cis.v2.secretName | required "please specify .Values.cis.v2.secretName" | quote }}
                  key: id
            - name: SUBACCOUNT_SYNC_CIS_EVENTS_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cis.v2.secretName | required "please specify .Values.cis.v2.secretName" | quote }}
                  key: secret
            - name: SUBACCOUNT_SYNC_CIS_EVENTS_AUTH_URL
              value: {{ .Values.cis.v2.authURL | required "please specify .Values.cis.v2.authURL" | quote }}
            - name: SUBACCOUNT_SYNC_CIS_EVENTS_SERVICE_URL
              value: {{ .Values.cis.v2.eventServiceURL | required "please specify .Values.cis.v2.eventServiceURL" | quote }}
            - name: SUBACCOUNT_SYNC_CIS_EVENTS_RATE_LIMITING_INTERVAL
              value: {{ .Values.subaccountSync.cisRateLimits.events.rateLimitingInterval | quote }}
            - name: SUBACCOUNT_SYNC_CIS_EVENTS_MAX_REQUESTS_PER_INTERVAL
              value: {{ .Values.subaccountSync.cisRateLimits.events.maxRequestsPerInterval | quote }}
            - name: SUBACCOUNT_SYNC_CIS_ACCOUNTS_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cis.accounts.secretName | required "please specify .Values.cis.accounts.secretName" | quote }}
                  key: id
            - name: SUBACCOUNT_SYNC_CIS_ACCOUNTS_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cis.accounts.secretName | required "please specify .Values.cis.accounts.secretName" | quote }}
                  key: secret
            - name: SUBACCOUNT_SYNC_CIS_ACCOUNTS_AUTH_URL
              value: {{ .Values.cis.accounts.authURL | required "please specify .Values.cis.accounts.authURL" | quote }}
            - name: SUBACCOUNT_SYNC_CIS_ACCOUNTS_SERVICE_URL
              value: {{ .Values.cis.accounts.serviceURL | required "please specify .Values.cis.accounts.serviceURL" | quote }}
            - name: SUBACCOUNT_SYNC_CIS_ACCOUNTS_RATE_LIMITING_INTERVAL
              value: {{ .Values.subaccountSync.cisRateLimits.accounts.rateLimitingInterval | quote }}
            - name: SUBACCOUNT_SYNC_CIS_ACCOUNTS_MAX_REQUESTS_PER_INTERVAL
              value: {{ .Values.subaccountSync.cisRateLimits.accounts.maxRequestsPerInterval | quote }}
            - name: SUBACCOUNT_SYNC_DATABASE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: kcp-storage-client-secret
                  key: secretKey
                  optional: true
            - name: SUBACCOUNT_SYNC_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-username
            - name: SUBACCOUNT_SYNC_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-password
            - name: SUBACCOUNT_SYNC_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-serviceName
            - name: SUBACCOUNT_SYNC_DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-servicePort
            - name: SUBACCOUNT_SYNC_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-db-name
            - name: SUBACCOUNT_SYNC_DATABASE_SSLMODE
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-sslMode
            - name: SUBACCOUNT_SYNC_DATABASE_SSLROOTCERT
              value: /secrets/cloudsql-sslrootcert/server-ca.pem
        {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled false)}}
          volumeMounts:
              - name: cloudsql-sslrootcert
                mountPath: /secrets/cloudsql-sslrootcert
                readOnly: true
        {{- end}}
        {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled true)}}
        - name: cloudsql-proxy
          image: {{ .Values.global.images.cloudsql_proxy_image }}
          {{- if .Values.global.database.cloudsqlproxy.workloadIdentity.enabled }}
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432"]
          {{- else }}
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-credential_file=/secrets/cloudsql-instance-credentials/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql-instance-credentials
              readOnly: true
          {{- end }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
            {{ toYaml . | nindent 16 }}
          {{- end }}
        {{- end}}
      {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled true) (eq .Values.global.database.cloudsqlproxy.workloadIdentity.enabled false)}}
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      {{- end}}
      {{- if and (eq .Values.global.database.embedded.enabled false) (eq .Values.global.database.cloudsqlproxy.enabled false)}}
      volumes:
        - name: cloudsql-sslrootcert
          secret:
            secretName: kcp-postgresql
            items: 
              - key: postgresql-sslRootCert
                path: server-ca.pem
            optional: true
      {{- end}}
{{ end }}