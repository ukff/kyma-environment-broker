name: Verify KEB

on:
  pull_request:
    branches: [ main ]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  
permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  run-go-tests:
    uses: "./.github/workflows/run-unit-tests-reusable.yaml"
    with:
      release: "false"

  run-go-linter:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get changed files
      id: changed-files-specific
      uses: tj-actions/changed-files@90a06d6ba9543371ab4df8eeca0be07ca6054959
      with:
        files: |
          .github/**
          cmd/**
          common/**
          files/**
          internal/**
          scripts/**
          utils/edp-registrator/**
          .golangci.yml
          Dockerfile.*
          go.mod
          go.sum
          Makefile
          **/*.go
          **/*.sh

    - name: Set up go environment
      if: steps.changed-files-specific.outputs.any_modified == 'true'
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        
    - name: Go linter
      if: steps.changed-files-specific.outputs.any_modified == 'true'
      env:
        GOLINT_TIMEOUT: ${{ vars.GOLINT_TIMEOUT }}
      run: make go-lint

  run-go-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@90a06d6ba9543371ab4df8eeca0be07ca6054959
        with:
          files: |
            .github/**
            cmd/**
            common/**
            files/**
            internal/**
            scripts/**
            utils/edp-registrator/**
            .golangci.yml
            Dockerfile.*
            go.mod
            go.sum
            Makefile
            **/*.go
            **/*.sh

      - name: Set up go environment
        if: steps.changed-files-specific.outputs.any_modified == 'true'
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Run go checks
        if: steps.changed-files-specific.outputs.any_modified == 'true'
        run: make checks